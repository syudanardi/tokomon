{"version":3,"sources":["serviceWorkerRegistration.js","components/ServiceWorkerWrapper.js","context/AppReducer.js","context/GlobalState.js","components/Card.js","images/pika-wave.png","images/pika-search.png","components/Loading.js","api/pokemon.js","components/PokemonList.js","pages/Home.js","images/green-tpb.png","images/green-tpbo.png","Utility/Utility.js","components/Details.js","components/Success.js","components/Catching.js","pages/PokemonDetails.js","images/trashcan.png","images/rename.png","components/Collection.js","pages/MyCollection.js","images/tokomon-logo.png","images/home.png","images/grass.png","images/delete.png","components/Navbar.js","App.js","reportWebVitals.js","index.js","components/css/CommonStyle.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","React","useState","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","useEffect","reloadPage","postMessage","type","Snackbar","open","message","onClick","anchorOrigin","vertical","horizontal","action","Button","color","size","appReducer","input","index","resetVar","pokemons","payload","pokemon","names","push","name","image","splice","newName","length","newState","loaded","initialState","currentState","key","value","JSON","parse","sessionStorage","getItem","Array","isArray","e","getSessionStorage","initialValue","localStorage","hasOwnProperty","Object","keys","validateLocal","getLocalStorage","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","setItem","stringify","setLocalStorage","setSessionStorage","Provider","addPokemon","editPokemon","removePokemon","reset","loadPokemon","Card","object","Fragment","src","sprites","front_default","className","alt","Loading","props","extraClass","PikaSearch","GET_POKEMONS","gql","GET_POKEMON","style","require","PokemonList","useContext","offset","loadTrigger","setLoadTrigger","useQuery","variables","limit","loading","data","results","map","count","undefined","to","cardBorder","ownedFrame","id","PikaWave","Home","MySwal","withReactContent","Swal","capitalize","text","charAt","toUpperCase","slice","utility","catchFunction","nickName","pokemonName","currentNames","trim","replace","toLowerCase","includes","fire","title","icon","showConfirmButton","showCancelButton","cancelButtonText","confirmButtonText","releaseFunction","result","isConfirmed","editFunction","inputAttributes","autocapitalize","maxLength","preConfirm","showValidationMessage","resetFunction","confirmButtonTex","Details","prop","setCatching","types","typeName","isCatching","pokeball","openPokeball","owned","moves","move","Success","catching","goBack","setNickName","container","onSubmit","event","preventDefault","onChange","target","pattern","required","placeholder","Catching","setLoading","success","Math","random","setTimeout","PokemonDetails","route","params","Collection","myPokemons","ownedPokemonType","list","concat","species","renameIcon","trashIcon","MyCollection","setMyPokemons","Navbar","useLocation","pathname","TokomonLogo","GrassIcon","HomeIcon","DeleteIcon","client","ApolloClient","uri","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4ce5fa4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Snackbar, Button } from '@material-ui/core';\r\nimport * as serviceWorker from '../serviceWorkerRegistration';\r\n\r\nconst ServiceWorkerWrapper = () => {\r\n  const [showReload, setShowReload] = React.useState(false);\r\n  const [waitingWorker, setWaitingWorker] = React.useState(null);\r\n\r\n  const onSWUpdate = (registration) => {\r\n    setShowReload(true);\r\n    setWaitingWorker(registration.waiting);\r\n  };\r\n\r\n  useEffect(() => {\r\n    serviceWorker.register({ onUpdate: onSWUpdate });\r\n  }, []);\r\n\r\n  const reloadPage = () => {\r\n    waitingWorker?.postMessage({ type: 'SKIP_WAITING' });\r\n    setShowReload(false);\r\n    window.location.reload(true);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={showReload}\r\n      message=\"A new version is available!\"\r\n      onClick={reloadPage}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      action={\r\n        <Button\r\n          color=\"inherit\"\r\n          size=\"small\"\r\n          onClick={reloadPage}\r\n        >\r\n          Reload\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ServiceWorkerWrapper;","export default function appReducer(state, action) {\r\n    let input = [];\r\n    let index = -1;\r\n    function resetVar(){\r\n      input=[];\r\n      index=-1;\r\n    }\r\n    switch (action.type) {\r\n      case \"ADD_POKEMON\":\r\n        resetVar();\r\n        if (state.pokemons[action.payload.pokemon]) {\r\n          input = [...state.pokemons[action.payload.pokemon].names]\r\n        }\r\n        input.push(action.payload.name)\r\n        return {\r\n          ...state,\r\n          pokemons: {\r\n            ...state.pokemons,\r\n            [action.payload.pokemon]: {names: input, image: action.payload.image}\r\n          },\r\n        };\r\n        \r\n      case \"EDIT_POKEMON\":\r\n        resetVar();\r\n        if (state.pokemons[action.payload.pokemon]) {\r\n          input = [...state.pokemons[action.payload.pokemon].names]\r\n        }\r\n        index = input.indexOf(action.payload.name)\r\n        input.splice(index, 1, action.payload.newName)\r\n        return {\r\n          ...state,\r\n          pokemons: {\r\n            ...state.pokemons,\r\n            [action.payload.pokemon]: {...state.pokemons[action.payload.pokemon], names: input}\r\n          },\r\n        };\r\n  \r\n      case \"REMOVE_POKEMON\":\r\n        resetVar();\r\n        if (state.pokemons[action.payload.pokemon]) {\r\n          input = [...state.pokemons[action.payload.pokemon].names]\r\n        }\r\n        index = input.indexOf(action.payload.name);\r\n        if (index > -1) {\r\n          input.splice(index, 1);\r\n        } else {\r\n          console.log(\"error removing, index not found\");\r\n          return {...state}\r\n        }\r\n\r\n        if(input.length > 0) {\r\n          return {\r\n            ...state,\r\n            pokemons: {\r\n              ...state.pokemons,\r\n              [action.payload.pokemon]: {\r\n                ...state.pokemons[action.payload.pokemon],\r\n                names: input\r\n              }\r\n            },\r\n          }\r\n        } else {\r\n          let newState = {\r\n            ...state,\r\n          }\r\n          delete newState.pokemons[action.payload.pokemon];\r\n          return newState\r\n        }\r\n\r\n      case \"RESET\":\r\n        resetVar();\r\n        return {\r\n\t\t\t\t\t...action.payload\r\n\t\t\t\t};\r\n      \r\n      case \"LOAD_POKEMON\":\r\n        return {\r\n          ...state,\r\n          loaded: [...state.loaded, ...action.payload],\r\n        }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };","import React, { createContext, useReducer, useEffect } from 'react';\r\n\r\nimport appReducer from 'context/AppReducer';\r\n\r\nlet initialState = {\r\n  pokemons: {},\r\n  loaded: []\r\n};\r\n\r\nfunction validateLocal(pokemons) {\r\n  let keys = Object.keys(pokemons);\r\n  for(let key of keys) {\r\n    if (typeof pokemons[key] != 'object') {\r\n      return false\r\n    }\r\n    if (!pokemons[key].hasOwnProperty('image')) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n}\r\n  \r\nfunction getLocalStorage(key, initialValue) {\r\n    try {\r\n        const value = JSON.parse(window.localStorage.getItem(key));\r\n        if (value && value.hasOwnProperty('pokemons')){\r\n          if (validateLocal(value.pokemons)) {\r\n            return {...initialValue, pokemons: value.pokemons};\r\n          }\r\n        }\r\n        return initialValue\r\n\r\n    } catch (e) {\r\n        // if error, return initial value\r\n        return initialValue;\r\n    }\r\n}\r\n\r\nfunction getSessionStorage(key, state) {\r\n  try {\r\n      const value = JSON.parse(window.sessionStorage.getItem(key));\r\n      if (Array.isArray(value)){\r\n        return {...state, loaded: value}\r\n      }\r\n      return {...state, loaded: initialState.loaded}\r\n\r\n  } catch (e) {\r\n      // if error, return initial value\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction setLocalStorage(key, value) {\r\n    try {\r\n      window.localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (e) {\r\n      console.log(e)\r\n        // catch possible errors:\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\n    }\r\n}\r\n\r\nfunction setSessionStorage(key, value) {\r\n  try {\r\n    window.sessionStorage.setItem(key, JSON.stringify(value));\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst currentState = getSessionStorage('loadedPokemons', getLocalStorage('tokomonState', initialState))\r\nexport const GlobalContext = createContext(currentState);\r\n  \r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, currentState);\r\n\r\n  useEffect(() => {\r\n    setLocalStorage(\"tokomonState\", {pokemons: state.pokemons});\r\n  }, [state]);\r\n\r\n  useEffect(()=>{\r\n    setSessionStorage(\"loadedPokemons\", state.loaded)\r\n  }, [state])\r\n\r\n  /**\r\n   * Catch a pokemon, storing its nickname and sprite\r\n   * @param {{pokemon:string, name:string, image:string}} pokemon image is url to pokemon sprite, name is nickname, pokemon is species\r\n   */\r\n  function addPokemon(pokemon) {\r\n    dispatch({\r\n      type: \"ADD_POKEMON\",\r\n      payload: pokemon\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit a pokemon name\r\n   * @param {{pokemon:string, name:string, newName:string}} pokemon newName is new nickname, name is nickname, pokemon is species\r\n   */\r\n  function editPokemon(pokemon) {\r\n    dispatch({\r\n      type: \"EDIT_POKEMON\",\r\n      payload: pokemon\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove a pokemon from your state.pokemon\r\n   * @param {{pokemon:string, name:string}} pokemon name is nickname, pokemon is species\r\n   */\r\n  function removePokemon(pokemon) {\r\n    dispatch({\r\n      type: \"REMOVE_POKEMON\",\r\n      payload: pokemon\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete all entries in the collection\r\n   */\r\n  function reset() {\r\n    dispatch({\r\n        type: \"RESET\",\r\n        payload: {...state, pokemons:{}}\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Load array of pokemons into the session storage to prevent reloading pokemon lists\r\n   * @param {[{id: Number, name: String}]} loaded array of pokemons\r\n   */\r\n  function loadPokemon(loaded) {\r\n    dispatch({\r\n      type: \"LOAD_POKEMON\",\r\n      payload: loaded\r\n    })\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        pokemons: state.pokemons,\r\n        loaded: state.loaded,\r\n        addPokemon,\r\n        editPokemon,\r\n        removePokemon,\r\n        reset,\r\n        loadPokemon\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};","import React from 'react';\r\nimport \"components/css/Card.css\"\r\n\r\nexport const Card = ({object}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        src={object.image ? object.image : (object.sprites ?  object.sprites.front_default : null)}\r\n        className=\"bg-white h-28 w-auto object-cover rounded-full mx-auto shadow-lg\"\r\n        alt={object.name}\r\n      />\r\n      <span className=\"card-text capitalize text-xl mt-4 m-auto block\" > {object.name} </span>\r\n    </React.Fragment>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/pika-wave.714e53cf.png\";","export default __webpack_public_path__ + \"static/media/pika-search.caa03c7c.png\";","import React from 'react'\r\nimport PikaSearch from 'images/pika-search.png'\r\nimport 'components/css/Loading.css';\r\n\r\nexport const Loading = (props) => {\r\n  const {extraClass} = {props}\r\n  return (\r\n    <React.Fragment>\r\n      <img className={\"loading-image loading-animated \"+extraClass} src={PikaSearch} alt=\"Loading\"/>\r\n      <p className=\"loading-text\">L O A D I N G</p>\r\n    </React.Fragment>\r\n  )\r\n}","import gql from \"graphql-tag\";\r\n\r\nexport const GET_POKEMONS = gql`\r\n  query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      results {\r\n        id\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }`\r\n\r\nexport const GET_POKEMON = gql`\r\nquery pokemon($name: String!) {\r\n  pokemon(name: $name) {\r\n    id\r\n    name\r\n    sprites {\r\n      front_default\r\n    }\r\n    moves {\r\n      move {\r\n        name\r\n      }\r\n    }\r\n    types {\r\n      type {\r\n        name\r\n      }\r\n    }\r\n  }\r\n}\r\n`;","import React, {useState, useEffect, useContext} from \"react\";\r\nimport { useQuery } from '@apollo/client';\r\nimport {Card} from 'components/Card'\r\nimport { Link } from 'react-router-dom';\r\nimport PikaWave from 'images/pika-wave.png';\r\nimport {Loading} from 'components/Loading';\r\nimport {GET_POKEMONS} from 'api/pokemon'\r\nimport { GlobalContext } from 'context/GlobalState';\r\nconst {style} = require('components/css/CommonStyle')\r\n\r\nexport const PokemonList = () => {\r\n  const {loaded, loadPokemon, pokemons } = useContext(GlobalContext);\r\n  const limit = 24;\r\n  let offset = loaded.length\r\n  const [loadTrigger, setLoadTrigger] = useState(loaded.length === 0 ? true: false)\r\n  const {loading, error, data} = useQuery(GET_POKEMONS, {variables: {limit: limit, offset: offset}})\r\n  const MAX_POKEMON = 1117;\r\n\r\n  useEffect(() => {\r\n    if (!loading && loadTrigger) {\r\n      loadPokemon(data.pokemons.results);\r\n      offset = loaded.length; // eslint-disable-line react-hooks/exhaustive-deps\r\n      setLoadTrigger(false);\r\n    }\r\n  }, [loading, loadTrigger]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function loadMore() {\r\n    setLoadTrigger(true);\r\n  }\r\n\r\n  if(error) {\r\n    return <p>Error Loading Pokemons from graphql</p>\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mt-10 flex items-center justify-center\"> \r\n         <div className=\"grid grid-cols-2 gap-6 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6\">\r\n          {loaded.map((pokemon)=>{\r\n            let count = (pokemons[pokemon.name] !== undefined ? pokemons[pokemon.name].names.length : 0);\r\n            return (\r\n              <Link to={`/pokemon-details/${pokemon.name}`} key={pokemon.id}>\r\n                <div className={style.cardBorder}>\r\n                  <Card object={pokemon}/>\r\n                  <span className={style.ownedFrame}>\r\n                    Owned: {count}\r\n                  </span>\r\n                </div>\r\n              </Link>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n      {loading ? \r\n      <div className=\"loading-container\">\r\n        <Loading extraClass={\"\"}/> \r\n      </div> : loaded.length < MAX_POKEMON ?\r\n      <div className=\"loading-container\" onClick={()=>{loadMore()}}>\r\n        <img className=\"loading-image\" src={PikaWave} alt=\"waving pikachu\"></img>\r\n        <p className=\"loading-text\">LOAD MORE</p>\r\n      </div> : null\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};","import React from \"react\";\r\nimport {PokemonList} from \"components/PokemonList\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container mx-auto max-w-7xl mb-4\">\r\n        <h3 className=\"page-title text-center text-3xl mt-2 text-base leading-8 text-black font-bold tracking-wide uppercase\">\r\n          Pokemon Shopping App\r\n        </h3>\r\n        <PokemonList/>\r\n      </div>\r\n    </React.Fragment>)\r\n}","export default __webpack_public_path__ + \"static/media/green-tpb.c18b41b6.png\";","export default __webpack_public_path__ + \"static/media/green-tpbo.d23f4445.png\";","import React from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nfunction capitalize(text) {\r\n  return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n\r\nexport const utility = \r\n  {\r\n    catchPokemon: (catchFunction, pokemons, pokemon, nickName, image)=>{\r\n      const pokemonName = capitalize(pokemon);\r\n      const isNew = !Boolean(pokemons[pokemon]);\r\n      const currentNames = (isNew ? [] : pokemons[pokemon].names);\r\n      const newName = nickName.trim().replace(/\\s\\s+/g, ' ').toLowerCase();\r\n      console.log(newName);\r\n\r\n      if (currentNames.includes(newName)) {\r\n        MySwal.fire({\r\n          title: <p>Already have {pokemonName} with {capitalize(newName)} name</p>,\r\n          icon: 'error',\r\n          showConfirmButton: false,\r\n          showCancelButton: true,\r\n          cancelButtonText: \"Oops...\"\r\n        })\r\n        return false;\r\n      } else {\r\n        MySwal.fire({\r\n          icon:'success',\r\n          title: <p>{capitalize(newName)} added to your Pokemon List!</p>,\r\n          confirmButtonText: \"Neat!\"\r\n        }).then(()=>{\r\n          catchFunction({pokemon: pokemon, name: newName, image})\r\n        })\r\n        return true;\r\n      }\r\n    },\r\n\r\n    releasePokemon: (releaseFunction, pokemon, name) => {\r\n      MySwal.fire({\r\n        title: <p>Are you sure you want to release {name}?</p>,\r\n        confirmButtonText: \"Yes!\",\r\n        showCancelButton: \"NO!!!\",\r\n        icon: 'warning',\r\n      }).then((result)=>{\r\n        if (result.isConfirmed) {\r\n          releaseFunction({pokemon,name});\r\n          MySwal.fire(\r\n            'Released!',\r\n            `${name} has been released! Bye~`,\r\n            'success'\r\n          )\r\n        }\r\n      })\r\n    },\r\n\r\n    renamePokemon: (currentNames, editFunction, pokemon, name)=>{\r\n      MySwal.fire({\r\n        title: 'Enter new name',\r\n        input: 'text',\r\n        inputAttributes: {\r\n          autocapitalize: 'off',\r\n          maxLength: 12,\r\n        },\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Rename',\r\n        preConfirm: (value) => {\r\n          // eslint-disable-next-line\r\n          if (value == \"\") {\r\n            Swal.showValidationMessage(\r\n              'name is required'\r\n            )\r\n          } else {\r\n            const newName = value.trim().replace(/\\s\\s+/g, ' ').toLowerCase();\r\n            if (currentNames.includes(newName.toLowerCase())) {\r\n              Swal.showValidationMessage(\r\n                `${capitalize(newName)} already used for this type of pokemon`\r\n              )\r\n            }\r\n          }\r\n        }\r\n      },).then((result)=>{\r\n        if (result.isConfirmed) {\r\n          const newName = result.value.trim().replace(/\\s\\s+/g, ' ').toLowerCase();\r\n          editFunction({pokemon, name, newName: newName});\r\n          MySwal.fire(\r\n            'Renamed!',\r\n            `${capitalize(name)} has been renamed to ${capitalize(newName)}`,\r\n            'success'\r\n          )\r\n        }\r\n      })\r\n    },\r\n\r\n    reset: (resetFunction)=>{\r\n      MySwal.fire({\r\n        title: 'DELETE POKEMON COLLECTION',\r\n        text: \"Are you sure you want to delete your collections?\",\r\n        showCancelButton: true,\r\n        confirmButtonTex: 'Yes'\r\n      }).then((result)=>{\r\n        if(result.isConfirmed) {\r\n          resetFunction();\r\n          MySwal.fire(\r\n            'Deleted',\r\n            'Your collection is empty now',\r\n            'success'\r\n          )\r\n        }\r\n      })\r\n    }\r\n  }","import React, {useContext} from \"react\";\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_POKEMON } from 'api/pokemon'\r\nimport {Loading} from 'components/Loading';\r\nimport pokeball from 'images/green-tpb.png';\r\nimport openPokeball from 'images/green-tpbo.png';\r\nimport 'components/css/Details.css';\r\nimport {utility} from 'Utility/Utility'\r\nimport { GlobalContext } from 'context/GlobalState';\r\n\r\nexport const Details = (prop) => {\r\n  const { pokemons, removePokemon } = useContext(GlobalContext);\r\n  const { name, setCatching } = prop.state;\r\n  const {loading, error, data} = useQuery(GET_POKEMON, {variables: {name:name}})\r\n\r\n  function catchPokemon(pokemon, image) {\r\n    setCatching({isCatching: true, pokemon, image})\r\n  }\r\n\r\n  function getPokemon() {\r\n    if (loading) return <div className=\"loading-container\"><Loading/></div>;\r\n    if (error) return <p>Error loading graphql: {error}</p>;\r\n      return(\r\n        <div className=\"grid grid-cols-1 divide-y-2 gap-4 md:grid-cols-4 lg:grid-cols-4 md:divide-x-2 md:divide-y-0 space-y-2\">\r\n          <div className=\"col-span-1 justify-self-center\">\r\n            <img\r\n              src={data.pokemon.sprites.front_default}\r\n              className=\"bg-gray-300 w-auto h-40 object-cover rounded-full mx-auto shadow-lg\"\r\n              alt={data.pokemon.name}\r\n            />\r\n            <p className=\"text-lg font-semibold my-4 capitalize\">{data.pokemon.name}</p>\r\n            <div className=\"flex flex-row justify-start font-semibold h-24 justify-center\">\r\n              {data.pokemon.types.map((type)=>{\r\n                let typeName = type.type.name;\r\n                return <span className={`mx-4 flex items-center border rounded-full w-24 justify-center mt-2 mb-12 bg-${typeName}`}>\r\n                  {typeName}</span>\r\n              })}\r\n            </div>\r\n            <div className=\"floating-button\" onClick={()=>{catchPokemon(data.pokemon.name, data.pokemon.sprites.front_default)}}>\r\n              <div className=\"pokeball-button\">\r\n                <img className=\"mx-auto lg:h-24 pokeball-img\" src={pokeball} alt=\"pokeball\"/>\r\n                <img className=\"mx-auto lg:h-24 pokeball-img\" src={openPokeball} alt=\"open pokeball\"/>\r\n              </div>\r\n              <p className=\"w-auto\">Catch</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-span-1 md:col-span-3 md:px-4\">\r\n            <div className=\"grid grid-row-2\">\r\n              <div className=\"row-span-1\">\r\n                <h3 className=\"font-bold text-4xl my-3 bg-green-300 rounded-md lg:pb-2\">Owned</h3>\r\n                <div className=\"flex flex-row flex-wrap justify-start font-semibold h-auto justify-center capitalize last-element\">\r\n                  {pokemons[data.pokemon.name] && pokemons[data.pokemon.name].names.length > 0 ? pokemons[data.pokemon.name].names.map((owned)=>{\r\n                    return (\r\n                      <div onClick={()=>{utility.releasePokemon(removePokemon, data.pokemon.name, owned)}}>\r\n                        <div className={`detail-pill mx-4 h-12 hover:bg-red-500 hover:text-white flex items-center border rounded-full w-24 justify-center mt-2 mb-12`}>\r\n                        <p className=\"detail-pill-text hover:bg-red-500 \">{owned}</p></div>\r\n                      </div>\r\n                    )\r\n                  }) : <>None</>}\r\n                </div>\r\n              </div>\r\n              <div className=\"row-span-1\">\r\n                <h3 className=\"font-bold text-4xl my-3 bg-green-300 rounded-md lg:pb-2\">Moves</h3>\r\n                <div className=\"flex flex-row flex-wrap justify-start font-semibold h-auto justify-center capitalize last-element\">\r\n                  {data.pokemon.moves.map((move)=>{\r\n                    return <div className={`detail-pill detail-move-pill mx-2 h-12 flex-none flex items-center border rounded-full w-24 justify-center mt-2 mb-12`}>\r\n                      <p className=\"detail-pill-text\">{move.move.name}</p></div>\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div> \r\n    )\r\n  }\r\n\r\n  return getPokemon();\r\n}","import React, {useState, useContext} from \"react\";\r\nimport pokeball from \"images/green-tpb.png\";\r\nimport {style} from \"components/css/CommonStyle\";\r\nimport {utility} from 'Utility/Utility';\r\nimport { GlobalContext } from 'context/GlobalState';\r\n\r\n\r\nexport const Success = (props)=>{\r\n  const { pokemons, addPokemon } = useContext(GlobalContext);\r\n  const { catching, setCatching, goBack} = props.state;\r\n  const [nickName, setNickName] = useState('');\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (utility.catchPokemon(addPokemon, pokemons, catching.pokemon, nickName, catching.image)) {\r\n      setCatching({isCatching: false})\r\n    }\r\n  }\r\n\r\n  function changeHandler(event) {\r\n    setNickName(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={style.container + \" success-container\"}>\r\n      <div>\r\n        <div>\r\n          <p className=\"catching-text\">{catching.pokemon} captured</p>\r\n        </div>\r\n        <div className=\"row-span-1 py-6 catching-img-container\">\r\n          <img className=\"catching-pokeball\" src={pokeball} alt=\"catching-Pokeball\"></img>\r\n        </div>\r\n        <div>\r\n            <form onSubmit={handleSubmit} className=\"m-4 flex\tjustify-center\">\r\n              <input className=\"rounded-l-lg p-4 border-t mr-0 border-b border-l text-gray-800 border-gray-200 bg-white\" \r\n                type=\"text\"\r\n                value={nickName}\r\n                onChange={changeHandler}\r\n                maxLength=\"11\"\r\n                pattern=\".*\\S.*\"\r\n                title=\"at least 1 non space character\"\r\n                required\r\n                placeholder=\"enter unique name\"/>\r\n                <button className=\"px-8 rounded-r-lg bg-green-400 text-white font-bold p-4 uppercase border-yellow-500 border-t border-b border-r\">KEEP</button>\r\n            </form>\r\n        </div>\r\n        <div>\r\n          <button className=\"release-button\" onClick={()=>{goBack()}}>Release Instead</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState} from \"react\";\r\nimport pokeball from \"images/green-tpb.png\";\r\nimport openPokeball from \"images/green-tpbo.png\";\r\nimport {Success} from 'components/Success';\r\nimport {style} from \"components/css/CommonStyle\";\r\nimport \"components/css/Catching.css\";\r\n\r\nexport const Catching = (props) =>{\r\n  const {catching, setCatching} = props.state\r\n  const [loading, setLoading] = useState(true)\r\n  let success = (Math.random()*10 > 5 ? true : false);\r\n  if(loading) {\r\n    setTimeout(()=>{setLoading(false)}, 1000);\r\n  }\r\n  function goBack(){\r\n    setCatching({isCatching: false})\r\n  }\r\n  if (loading) {\r\n    return(\r\n      <div className={style.container}>\r\n        <div>\r\n          <div>\r\n            <p className=\"catching-text\">Catching {catching.pokemon}!!!</p>\r\n          </div>\r\n          <div className=\"row-span-1 catching-img-container pt-6 pb-24\">\r\n            <img className=\"pokeball-animated catching-pokeball\" src={pokeball} alt=\"pokeball\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  if (success) {\r\n    return (\r\n      <Success state={{...props.state, goBack}}/>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className={style.container}>\r\n        <div>\r\n          <div className=\"my-4\">\r\n            <span className=\"catching-text mx-4\">{catching.pokemon} Fleed :(</span>\r\n              <button\r\n                onClick={()=>{goBack()}} \r\n                className=\"bg-blue-500 hover:bg-blue-300 text-white font-bold py-2 px-4 rounded\">\r\n                Back\r\n              </button>\r\n          </div>\r\n          <div className=\"row-span-1 catching-img-container\">\r\n            <img className=\"catching-pokeball\" src={openPokeball} alt=\"open pokeball\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {useState} from \"react\";\r\nimport {Details} from \"components/Details\";\r\nimport {Catching} from \"components/Catching\";\r\n\r\nexport const PokemonDetails = (route) => {\r\n  const name = route.match.params.name;\r\n  const [catching, setCatching] = useState({isCatching: false})\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container mx-auto max-w-7xl mb-4\">\r\n        <h3 className=\"page-title text-center text-3xl mt-2 text-base leading-8 text-black font-bold tracking-wide uppercase\">\r\n          Pokedex Entry For {name}\r\n        </h3>\r\n        {catching.isCatching ? <Catching state={{catching, setCatching}}></Catching> :\r\n        <Details state={{name, setCatching}} ></Details>\r\n        }\r\n      </div>\r\n    </React.Fragment>)\r\n}","export default __webpack_public_path__ + \"static/media/trashcan.8fd10585.png\";","export default __webpack_public_path__ + \"static/media/rename.7cdcaaa7.png\";","import React from \"react\";\r\nimport { Card } from 'components/Card'\r\nimport trashIcon from 'images/trashcan.png';\r\nimport renameIcon from 'images/rename.png';\r\nimport {style} from 'components/css/CommonStyle';\r\nimport {utility} from 'Utility/Utility';\r\nimport { Link } from 'react-router-dom';\r\nimport 'components/css/Collection.css';\r\n\r\nexport const Collection = (props) => {\r\n  const {myPokemons, removePokemon, editPokemon} = props.state\r\n  let ownedPokemonType = Object.keys(myPokemons)\r\n  let list = [];\r\n  let count = 0;\r\n\r\n  for (let owned of ownedPokemonType) {\r\n    list = list.concat(myPokemons[owned].names.map((name)=>{\r\n      return {species: owned, name, image: myPokemons[owned].image}\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div className='mt-10 grid grid-cols-2 gap-6 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6'>\r\n          {list.map((pokemon)=>{\r\n            return (\r\n            <div className={style.cardBorder} key={count++}>\r\n              \r\n              <div className=\"collection-card\">\r\n                <Link to={`/pokemon-details/${pokemon.species}`}>\r\n                  <Card object={{name:pokemon.name, image:pokemon.image}}/>\r\n                </Link>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-2 mt-4\">\r\n                <div className=\"collection-action-container\"\r\n                onClick={()=>{utility.renamePokemon(myPokemons[pokemon.species].names, editPokemon, pokemon.species, pokemon.name)}}>\r\n                  <img src={renameIcon} alt=\"Rename Icon\" className=\"collection-action-button\"/>\r\n                </div>\r\n                <div className=\"collection-action-container\"\r\n                onClick={()=>{utility.releasePokemon(removePokemon, pokemon.species, pokemon.name)}}>\r\n                  <img src={trashIcon} alt=\"Trash Icon\" className=\"collection-action-button\"/>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>)})}\r\n        </div>\r\n    </React.Fragment>\r\n  );\r\n};","import React, {useState, useContext, useEffect} from \"react\";\r\nimport {Collection} from \"components/Collection\";\r\nimport { GlobalContext } from 'context/GlobalState';\r\n\r\nexport const MyCollection = (route) => {\r\n  const { pokemons, removePokemon, editPokemon } = useContext(GlobalContext);\r\n  const [myPokemons, setMyPokemons] = useState({});\r\n\r\n  useEffect(()=>{\r\n    setMyPokemons(pokemons);\r\n  }, [pokemons])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container mx-auto max-w-7xl mb-4\">\r\n        <h3 className=\"page-title text-center text-3xl mt-2 text-base leading-8 text-black font-bold tracking-wide uppercase\">\r\n          My Pokemons\r\n        </h3>\r\n        <Collection state={{myPokemons, removePokemon, editPokemon}} ></Collection>\r\n      </div>\r\n    </React.Fragment>)\r\n}","export default __webpack_public_path__ + \"static/media/tokomon-logo.fe870695.png\";","export default __webpack_public_path__ + \"static/media/home.be83bf25.png\";","export default __webpack_public_path__ + \"static/media/grass.023886ca.png\";","export default __webpack_public_path__ + \"static/media/delete.d93cf84b.png\";","import React, {useContext} from 'react';\r\nimport { GlobalContext } from 'context/GlobalState';\r\nimport TokomonLogo from 'images/tokomon-logo.png'\r\nimport HomeIcon from 'images/home.png'\r\nimport GrassIcon from 'images/grass.png'\r\nimport DeleteIcon from 'images/delete.png'\r\nimport { Link, useLocation  } from 'react-router-dom';\r\nimport {utility} from 'Utility/Utility';\r\nimport 'components/css/Navbar.css'\r\n\r\nexport const Navbar = ()=>{\r\n  const location = useLocation().pathname;\r\n  const { reset } = useContext(GlobalContext);\r\n\r\n  return(\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-container\">\r\n          <ul className=\"navbar-menu logo-container\">\r\n            <li className={\"navbar-item\"}>\r\n              <Link to=\"/\" id=\"list-link\" className=\"navbar-link\">\r\n                <img className=\"img-item\" src={TokomonLogo} alt=\"Delete Icon\"/>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"navbar-menu\">\r\n            <li className={location === \"/\" ? \"navbar-item active\" : \"navbar-item\"}>\r\n              <Link to=\"/\" id=\"list-link\" className=\"navbar-link\">\r\n                <img className=\"img-item\" src={GrassIcon} alt=\"Grass Icon\"/>\r\n                <p id=\"list-text\" className=\"navbar-text\">POKEMON LIST</p>\r\n              </Link>\r\n            </li>\r\n            <li className={location === \"/collection\" ? \"navbar-item active\" : \"navbar-item\"}>\r\n              <Link to=\"/collection\" id=\"collection-link\" className=\"navbar-link\">\r\n                <img className=\"img-item\" src={HomeIcon} alt=\"Home Icon\"/>\r\n                <p id=\"collection-text\" className=\"navbar-text\">MY COLLECTION</p>\r\n              </Link>\r\n            </li>\r\n            <li className={\"navbar-item navbar-delete\"}>\r\n              <div id=\"delete-link\" className=\"navbar-link\" onClick={()=>{utility.reset(reset)}}>\r\n                <img className=\"img-item\" src={DeleteIcon} alt=\"Delete Icon\"/>\r\n                <p id=\"delete-text\" className=\"navbar-text\">DELETE DATA</p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n  )\r\n}   ","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from '@apollo/client/react';\r\n\r\nimport { GlobalProvider } from './context/GlobalState';\r\nimport { Home } from './pages/Home';\r\nimport { PokemonDetails } from './pages/PokemonDetails';\r\nimport { MyCollection} from './pages/MyCollection';\r\nimport { Navbar } from './components/Navbar';\r\n\r\n\r\nconst uri = 'https://graphql-pokeapi.vercel.app/api/graphql';\r\nconst client = new ApolloClient({ uri });\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <GlobalProvider>\r\n        <Navbar/>\r\n        <div className=\"App mx-2\">\r\n            <Switch>\r\n              <Route path=\"/\" component={Home} exact />\r\n              <Route path=\"/pokemon-details/:name\" component={PokemonDetails} exact />\r\n              <Route path=\"/collection\" component={MyCollection} exact />\r\n            </Switch>\r\n        </div>\r\n      </GlobalProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport './tailwind.css';\r\nimport ServiceWorkerWrapper from 'components/ServiceWorkerWrapper';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <ServiceWorkerWrapper/>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// const owned = \"rounded-full w-2.5 h-2.5 block mr-2\";\r\n\r\nexport const style = {\r\n  cardBorder : \"bg-green-100 border-2 border-green-500 py-8 px-6 md:px-10 text-center rounded-md shadow-lg max-w-xs max-h-auto mx-auto \",\r\n  ownedFrame : \"bg-white flex items-center border rounded-full w-24 justify-center mx-auto mt-2 mb-12\",\r\n  container : \"mt-10 flex items-center justify-center\"\r\n}\r\n\r\n"],"sourceRoot":""}